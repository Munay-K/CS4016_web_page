---
// Server-side imports (optional)
import { supabase as serverSupabase } from '../lib/supabase';
---

<html>
  <body>
    <h1>Computer Graphics Projects</h1>
    
    <!-- Debug output (visible in browser) -->
    <div id="debug" style="background: #f0f0f0; padding: 1rem; margin-bottom: 2rem;">
      <h3>Connection Status</h3>
      <pre id="env-status">Checking environment variables...</pre>
      <pre id="supabase-status">Testing Supabase connection...</pre>
    </div>

    <!-- Main content container -->
    <div id="projects-container">
      <p>Loading projects...</p>
    </div>

    <script>
      // 1. First verify environment variables
      const envStatus = document.getElementById('env-status');
      envStatus.textContent = JSON.stringify({
        PUBLIC_SUPABASE_URL: import.meta.env.PUBLIC_SUPABASE_URL,
        HAS_ANON_KEY: Boolean(import.meta.env.PUBLIC_SUPABASE_ANON_KEY),
      }, null, 2);

      // 2. Dynamically import Supabase (better for production)
      import('../lib/supabase.js').then(async ({ supabase }) => {
        const statusEl = document.getElementById('supabase-status');
        
        try {
          // 3. Test connection
          const { data, error } = await supabase
            .from('projects')
            .select('*')
            .limit(1);

          if (error) throw error;

          // 4. Show success
          statusEl.innerHTML = `✅ Connected to Supabase!<br>Found ${data?.length || 0} projects`;
          
          // 5. Load actual projects
          const { data: projects } = await supabase
            .from('projects')
            .select('*');

          document.getElementById('projects-container').innerHTML = `
            <ul>
              ${projects.map(p => `<li><b>${p.title}</b> by ${p.student_name}</li>`).join('')}
            </ul>
          `;
        } catch (error) {
          statusEl.innerHTML = `❌ Connection failed:<br><span style="color:red">${error.message}</span>`;
          console.error('Supabase error:', error);
        }
      });
    </script>

    <style>
      #debug {
        font-family: monospace;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      pre {
        white-space: pre-wrap;
        word-wrap: break-word;
      }
    </style>
  </body>
</html>
